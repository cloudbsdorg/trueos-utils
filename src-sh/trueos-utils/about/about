#!/bin/sh

# memory-related

VM_PAGESIZE=`sysctl -n vm.stats.vm.v_page_size`
FREE_MEM=$((`sysctl -n vm.stats.vm.v_free_count` * $VM_PAGESIZE))
INACT_MEM=$((`sysctl -n vm.stats.vm.v_inactive_count` * $VM_PAGESIZE))
#CACHE_MEM=$((`sysctl -n vm.stats.vm.v_cache_count` * $VM_PAGESIZE))

AVAIL_MEMORY=$((`sysctl -n hw.realmem` /1024/1024))
FREE_MEMORY=$((($FREE_MEM + $INACT_MEM) /1024 /1024))

# system type TrueOS 
# special function for checking the version

display_trueos_version()
{
if [ -e "/etc/defaults/trueos-desktop" ] ; then
  VER=`pkg query %v trueos-desktop`
    if [ "$VER" != "" ] ; then
    echo "TrueOS-Desktop-${1}${VER}"
  fi
else
  VER=`pkg query %v trueos-server`
  if [ "$VER" != "" ] ; then
    echo "TrueOS-Server-${1}${VER}"
  fi
fi
}

# check TrueOS type again for other functions

if [ -e "/etc/defaults/trueos-desktop" ] ; then
  SYSTYPE="DESKTOP"
else
  SYSTYPE="SERVER"
fi

EFICHECK=`dmesg | grep "(efifb)" | awk '{print $1}' | cut -d '(' -f 2 | cut -d ')' -f 1`

# check whether the type of the boot loader is BIOS or EFI

if [ -n "$EFICHECK" ] ; then
    export LOADERTYPE=EFI
  else
    export LOADERTYPE=BIOS
fi

# check whether GRUB is used

if [ -f /etc/grub/grub.cfg ] ; then
    export BOOTLOADER=GRUB
  else
    export BOOTLOADER=BSD
fi

# display the version of pkg(8)

display_pkg_version()
{
  VER=`pkg query %v $2`

  if [ "$VER" != "" ] ; then
    echo "${1}${VER}"
  fi
}

# display general information
#
# After SCFB is chosen, 'about' does not show use of SCFB
# https://github.com/trueos/trueos-core/issues/316#event-946089647

show_general()
{
echo ""
echo "==================="
echo "General information"
echo "==================="
echo ""
echo "boot environment now (N) … `beadm list | grep " N" | awk '{print $1,$2,$5}'`"
echo "       after restart (R) … `beadm list | grep "R " | awk '{print $1,$2,$5}'`"
echo "boot loader …………………………………… `echo $BOOTLOADER`"
echo "            type ……………………… `echo $LOADERTYPE`"
echo "CPU ………………………………………………………… `sysctl -n hw.model`"
echo "    number of cores ……………… `sysctl -n kern.smp.cpus`"
echo "host ……………………………………………………… `hostname`"
echo "memory ………………………………………………… ${AVAIL_MEMORY} MB available, ${FREE_MEMORY} MB free"
echo "OS git branch ……………………………………………………………………………………… `uname -a | awk '{print $7}' | cut -d '(' -f 2 | cut -d ')' -f1`"
echo "OS git revision ………………………………………………………………………………… `uname -a | awk '{print $7}' | cut -d '(' -f 1`"
echo "OS kernel identity …………………………………………… (uname -i) `uname -i`"
echo "OS platform (architecture) ……………………… (uname -m) `uname -m`"
echo "OS release level ………………………………………………… (uname -r) `uname -r`"
echo "OS version and patch level …… (freebsd-version) `freebsd-version`"
echo "TrueOS package set ………………… `cat /usr/local/etc/trueos.conf 2>/dev/null | grep '^[[:space:]]*PACKAGE_SET: ' | sed 's|[[:space:]]*PACKAGE_SET: ||g'`"
echo "TrueOS version …………………………… `display_trueos_version`"
echo "uptime ………………………………………………… `uptime | awk '{sub(/^.* up +/,"");sub(/, *[0-9]+ users.*/,"");print}'`"
echo "user  …………………………………………………… `whoami`"

if [ "$SYSTYPE" = "DESKTOP" ] ; then 
  echo ""
  echo "More (TrueOS Desktop):"
  echo ""
  echo "    desktop environment …… `sed -n 2p /var/db/pcdm/lastlogin`"
  echo "    sound card driver ………… `cat /dev/sndstat | grep default`"
  echo "    wireless driver ……………… `sysctl -b net.wlan.devices`"
  echo "    X11 drivers ………………………… `awk '{if (sub(/^.*Loading.*modules\/drivers\//,"")) { printf "%s ",$0 } }END{print "";}'  < /var/log/Xorg.0.log`"
  echo ""
fi
}

# display networking information

show_network()
{
echo ""
echo "=========="
echo "Networking"
echo "=========="
echo ""
echo "Default routing table"
echo "---------------------"
echo ""
route show default
echo ""
echo "Routing table in numeric format"
echo "-------------------------------"
echo ""
netstat -arn
echo ""
echo "Interface information, condensed"
echo "--------------------------------"
echo ""
ifconfig | grep -v ether | grep -v bssid
echo ""
echo "DNS-related"
echo "-----------"
echo ""
drill
echo ""
echo "----"
echo ""
echo "IPv4 key points (not interface specific): "
echo ""
ifconfig | grep "inet " |  awk '{ print "    "$2 }'
echo ""
echo "IPv6 key points (not interface-specific): "
echo ""
ifconfig | grep "inet6" |  awk '{ print "    "$2 }'
echo ""
}

# banner
# hung beneath (it's attractive, but space-consuming)

show_trueos_banner()
{
echo "   ______                   ____  _____"
echo "  /_  __/______  _____     / __ \/ ___/"
echo "   / / / ___/ / / / _ \   / / / /\__ \ "
echo "  / / / /  / /_/ /  __/  / /_/ /___/ / "
echo " /_/ /_/   \__,_/\___/   \____//____/  "
echo ""
echo "                https://www.trueos.org/"
echo ""
}

show_usage()
{
echo "-a show all information"
echo "-n show network information only"
}

# check for arguments

if [ -z $1 ] ; then
	show_general
# 	show_trueos_banner
	exit 0
fi

case $1 in
	-n)
	show_network
# 	show_trueos_banner
        ;;
	-a)
	show_general
	show_network
# 	show_trueos_banner
	;;
        *)
	show_usage
        ;;
esac

# a possible future set of arguments/flags/options 
# https://discourse.trueos.org/t/-/411/35
# 
# -a all
# -c compatibility
# -g general (the default, if no option is specified)
# -h hardware
# -i interactive
# -k kernel
# -n networking
# -r runlevels
# -u updating
# -v verbose
